/* ENTITIES */

CREATE TABLE Addresses (
	AddressID INT(10) NOT NULL AUTO_INCREMENT,
	Street TEXT NOT NULL,
	City TEXT NOT NULL,
	StateCode CHAR(2) NOT NULL,
	ZipCode CHAR(5) NOT NULL,
	PRIMARY KEY (AddressID),
	UNIQUE (Street, City, StateCode, ZipCode),
	CHECK (StateCode REGEXP '[A-Z]{2}'),
	CHECK (ZipCode REGEXP '[0-9]{5}')
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;
-- Used to store addresses since they are composed of multiple pieces of information.
-- Checks to ensure the state code and zipcode are formatted correctly.

CREATE TABLE Patients (
	PatientID INT(10) NOT NULL AUTO_INCREMENT,
	FirstName TEXT NOT NULL,
	LastName TEXT NOT NULL,
	SocialSecurityNumber CHAR(11) NOT NULL,
	DateOfBirth DATE NOT NULL,
	EmailAddress TEXT NOT NULL,
	PhoneNumber CHAR(12) NOT NULL,
	AddressID INT(10) NOT NULL,
	Password VARCHAR(20) NOT NULL,
	PRIMARY KEY (PatientID),
	FOREIGN KEY (AddressID) REFERENCES Addresses(AddressID),
	UNIQUE (SocialSecurityNumber),
	UNIQUE (EmailAddress),
	UNIQUE (PhoneNumber),
	CHECK (SocialSecurityNumber REGEXP '[0-9]{3}-[0-9]{2}-[0-9]{4}'),
	CHECK (PhoneNumber REGEXP '[0-9]{3}-[0-9]{3}-[0-9]{4}')
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;
-- Used to store login and personal information about patients.
-- References Addresses to store additional information about their address.
-- Requires a unique social security number, email address, and phone number since we want each patient to only have one account.
-- Checks to ensure the social security numer and phone number are formatted correctly.

CREATE TABLE InsurancePlans (
	InsurancePlanID INT(10) NOT NULL AUTO_INCREMENT,
	Name TEXT NOT NULL,
	AnnualPremium INT NOT NULL,
	ProductDeductible INT NOT NULL,
	ServiceDeductible INT NOT NULL,
	TestDeductible INT NOT NULL,
	PlanContribution INT NOT NULL,
	MaxCoverage INT NOT NULL,
	PRIMARY KEY (InsurancePlanID),
	UNIQUE (Name),
	UNIQUE (AnnualPremium, ProductDeductible, ServiceDeductible, TestDeductible, PlanContribution, MaxCoverage),
	CHECK (AnnualPremium >= 20000 AND AnnualPremium <= 40000),
	CHECK (ProductDeductible >= 50 AND ProductDeductible <= 250),
	CHECK (ServiceDeductible >= 1000 AND ServiceDeductible <= 5000),
	CHECK (TestDeductible >= 250 AND TestDeductible <= 2500),
	CHECK (PlanContribution >= 0 AND PlanContribution <= 10000),
	CHECK (AnnualPremium > PlanContribution),
	CHECK (MaxCoverage >= 10000 AND MaxCoverage <= 20000),
	CHECK (AnnualPremium > MaxCoverage)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;
-- Used to store pricing information about different insurance plans.
-- Requires a unique combination of the annual premium, product deductible, service deductible, test deductible, plan contribution, and max coverage.
-- Checks to ensure the annual premium, product deductible, service deductible, test deductible, plan contribution, and max coverage are in an acceptable range.

CREATE TABLE Pharmacies (
	PharmacyID INT(10) NOT NULL AUTO_INCREMENT,
	Name TEXT NOT NULL,
	AddressID INT(10) NOT NULL,
	PRIMARY KEY (PharmacyID),
	FOREIGN KEY (AddressID) REFERENCES Addresses(AddressID),
	UNIQUE (Name),
	UNIQUE (AddressID)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;
-- Used to store identifying information about different pharmacies.
-- References Addresses to store additional information about their address.
-- Requires a unique name and address since we want only one entry for each pharmacy.

CREATE TABLE Labs (
	LabID INT(10) NOT NULL AUTO_INCREMENT,
	Name TEXT NOT NULL,
	AddressID INT(10) NOT NULL,
	PRIMARY KEY (LabID),
	FOREIGN KEY (AddressID) REFERENCES Addresses(AddressID),
	UNIQUE (Name),
	UNIQUE (AddressID)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;
-- Used to store identifying information about different labs.
-- References Addresses to store additional information about their address.
-- Requires a unique name and address since we want only one entry for each lab.

CREATE TABLE Hospitals (
	HospitalID INT(10) NOT NULL AUTO_INCREMENT,
	Name TEXT NOT NULL,
	AddressID INT(10) NOT NULL,
	PRIMARY KEY (HospitalID),
	FOREIGN KEY (AddressID) REFERENCES Addresses(AddressID),
	UNIQUE (Name),
	UNIQUE (AddressID)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;
-- Used to store identifying information about different hospitals.
-- References Addresses to store additional information about their address.
-- Requires a unique name and address since we want only one entry for each hospital.

CREATE TABLE Doctors (
	DoctorID INT(10) NOT NULL AUTO_INCREMENT,
	HospitalID INT(10) NOT NULL,
	FirstName TEXT NOT NULL,
	LastName TEXT NOT NULL,
	EmailAddress TEXT NOT NULL,
	PhoneNumber CHAR(12) NOT NULL,
	AddressID INT(10) NOT NULL,
	Password VARCHAR(20) NOT NULL,
	TimeStart INT NOT NULL,
	TimeEnd INT NOT NULL,
	PRIMARY KEY (DoctorID),
	FOREIGN KEY (HospitalID) REFERENCES Hospitals(HospitalID),
	FOREIGN KEY (AddressID) REFERENCES Addresses(AddressID),
	UNIQUE (EmailAddress),
	UNIQUE (PhoneNumber),
	CHECK (PhoneNumber REGEXP '[0-9]{3}-[0-9]{3}-[0-9]{4}'),
	CHECK (TimeStart >= 0 AND TimeStart <= 24),
	CHECK (TimeEnd >= 0 AND TimeEnd <= 24),
	CHECK (TimeEnd > TimeStart)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;
-- Used to store work and personal information about doctors.
-- References Hospitals and Addresses to store additional information about the hospital they work at and their address.
-- Requires a unique email address and phone number since we want each doctor to only have one account.
-- Checks to ensure the phone number is formatted correctly and each doctor has at least one hour available between 12AM and 12PM each weekday.

CREATE TABLE Products (
	ProductID INT(10) NOT NULL AUTO_INCREMENT,
	Name TEXT NOT NULL,
	Cost INT NOT NULL,
	PRIMARY KEY (ProductID),
	UNIQUE (Name),
	CHECK (Cost >= 100 AND Cost <= 500)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;
-- Used to store identifying and pricing information about different products.
-- Requires a unique name since we only want one entry for each product.
-- Checks to ensure the cost is in an acceptable range.

CREATE TABLE Services (
	ServiceID INT(10) NOT NULL AUTO_INCREMENT,
	Name TEXT NOT NULL,
	Cost INT NOT NULL,
	PRIMARY KEY (ServiceID),
	UNIQUE (Name),
	CHECK (Cost >= 2000 AND Cost <= 10000)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;
-- Used to store identifying and pricing information about different services.
-- Requires a unique name since we only want one entry for each service.
-- Checks to ensure the cost is in an acceptable range.

CREATE TABLE Tests (
	TestID INT(10) NOT NULL AUTO_INCREMENT,
	Name TEXT NOT NULL,
	Cost INT NOT NULL,
	PRIMARY KEY (TestID),
	UNIQUE (Name),
	CHECK (Cost >= 500 AND Cost <= 5000)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;
-- Used to store identifying and pricing information about different tests.
-- Requires a unique name since we only want one entry for each test.
-- Checks to ensure the cost is in an acceptable range.

CREATE TABLE Orders (
	OrderID INT(10) NOT NULL AUTO_INCREMENT,
	PatientID INT(10) NOT NULL,
	PharmacyID INT(10) NOT NULL,
	ProductID INT(10) NOT NULL,
	Quantity INT NOT NULL,
	OrderDate DATE NOT NULL,
	Cost INT NOT NULL,
	DueDate DATE NOT NULL,
	PRIMARY KEY (OrderID),
	FOREIGN KEY (PatientID) REFERENCES Patients(PatientID),
	FOREIGN KEY (PharmacyID) REFERENCES Pharmacies(PharmacyID),
	FOREIGN KEY (ProductID) REFERENCES Products(ProductID),
	CHECK (Quantity >= 1)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;
-- Used to store identifying and pricing information about different orders made by different patients.
-- References Patients, Pharmacies, and Products to store additional information about the patient, pharmacy providing the product, and chosen product.
-- Checks to ensure the quantity is at least one.

CREATE TABLE ServiceAppointments (
	ServiceAppointmentID INT(10) NOT NULL AUTO_INCREMENT,
	PatientID INT(10) NOT NULL,
	DoctorID INT(10) NOT NULL,
	ServiceID INT(10) NOT NULL,
	AppointmentDate DATE NOT NULL,
	AppointmentTime INT NOT NULL,
	Diagnosis TEXT NOT NULL DEFAULT 'You have not been diagnosed yet.',
	Cost INT NOT NULL,
	DueDate DATE NOT NULL,
	PRIMARY KEY (ServiceAppointmentID),
	FOREIGN KEY (PatientID) REFERENCES Patients(PatientID),
	FOREIGN KEY (DoctorID) REFERENCES Doctors(DoctorID),
	FOREIGN KEY (ServiceID) REFERENCES Services(ServiceID),
	CHECK (AppointmentTime >= 0 AND AppointmentTime <= 24)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;
-- Used to store indentifying and pricing information about different service appointments made by different patients.
-- References Patients, Doctors, and Services to store additional information about the patient, chosen doctor, and chosen service.
-- Checks to ensure the chosen time is between 12AM and 12PM.

CREATE TABLE TestAppointments (
	TestAppointmentID INT(10) NOT NULL AUTO_INCREMENT,
	PatientID INT(10) NOT NULL,
	LabID INT(10) NOT NULL,
	TestID INT(10) NOT NULL,
	AppointmentDate DATE NOT NULL,
	AppointmentTime INT NOT NULL,
	Diagnosis TEXT NOT NULL DEFAULT 'You have not been diagnosed yet.',
	Cost INT NOT NULL,
	DueDate DATE NOT NULL,
	PRIMARY KEY (TestAppointmentID),
	FOREIGN KEY (PatientID) REFERENCES Patients(PatientID),
	FOREIGN KEY (LabID) REFERENCES Labs(LabID),
	FOREIGN KEY (TestID) REFERENCES Tests(TestID),
	CHECK (AppointmentTime >= 0 AND AppointmentTime <= 24)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;
-- Used to store indentifying and pricing information about different lab appointments made by different patients.
-- References Patients, Labs, and Tests to store additional information about the patient, chosen lab, and chosen test.
-- Checks to ensure the chosen time is between 12AM and 12PM.



/* RELATIONSHIPS */

CREATE TABLE PatientsToDoctorsInfoConsent (
	PatientID INT(10) NOT NULL,
	DoctorID INT(10) NOT NULL,
	FirstName BOOL NOT NULL DEFAULT 0,
	LastName BOOL NOT NULL DEFAULT 0,
	SocialSecurityNumber BOOL NOT NULL DEFAULT 0,
	DateOfBirth BOOL NOT NULL DEFAULT 0,
	EmailAddress BOOL NOT NULL DEFAULT 0,
	PhoneNumber BOOL NOT NULL DEFAULT 0,
	AddressID BOOL NOT NULL DEFAULT 0,
	InsurancePlanID BOOL NOT NULL DEFAULT 0,
	Orders BOOL NOT NULL DEFAULT 0,
	ServiceAppointments BOOL NOT NULL DEFAULT 0,
	TestAppointments BOOL NOT NULL DEFAULT 0,
	PRIMARY KEY (PatientID, DoctorID),
	FOREIGN KEY (PatientID) REFERENCES Patients(PatientID),
	FOREIGN KEY (DoctorID) REFERENCES Doctors(DoctorID)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;

CREATE TABLE PatientsInsurancePlansAndCoverage (
	PatientID INT(10) NOT NULL,
	InsurancePlanID INT(10) NOT NULL,
	AmountCovered INT NOT NULL DEFAULT 0,
	PRIMARY KEY (PatientID, InsurancePlanID),
	FOREIGN KEY (PatientID) REFERENCES Patients(PatientID),
	FOREIGN KEY (InsurancePlanID) REFERENCES InsurancePlans(InsurancePlanID)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;

CREATE TABLE ProductsCoveredByInsurancePlans (
	ProductID INT(10) NOT NULL,
	InsurancePlanID INT(10) NOT NULL,
	PRIMARY KEY (ProductID, InsurancePlanID),
	FOREIGN KEY (ProductID) REFERENCES Products(ProductID),
	FOREIGN KEY (InsurancePlanID) REFERENCES InsurancePlans(InsurancePlanID)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;

CREATE TABLE ProductsProvidedByPharmacies (
	ProductID INT(10) NOT NULL,
	PharmacyID INT(10) NOT NULL,
	PRIMARY KEY (ProductID, PharmacyID),
	FOREIGN KEY (ProductID) REFERENCES Products(ProductID),
	FOREIGN KEY (PharmacyID) REFERENCES Pharmacies(PharmacyID)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;

CREATE TABLE ProductsUsedByServices (
	ProductID INT(10) NOT NULL,
	ServiceID INT(10) NOT NULL,
	PRIMARY KEY (ProductID, ServiceID),
	FOREIGN KEY (ProductID) REFERENCES Products(ProductID),
	FOREIGN KEY (ServiceID) REFERENCES Services(ServiceID)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;

CREATE TABLE ServicesCoveredByInsurancePlans (
	ServiceID INT(10) NOT NULL,
	InsurancePlanID INT(10) NOT NULL,
	PRIMARY KEY (ServiceID, InsurancePlanID),
	FOREIGN KEY (ServiceID) REFERENCES Services(ServiceID),
	FOREIGN KEY (InsurancePlanID) REFERENCES InsurancePlans(InsurancePlanID)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;

CREATE TABLE ServicesPerformedByDoctors (
	ServiceID INT(10) NOT NULL,
	DoctorID INT(10) NOT NULL,
	PRIMARY KEY (ServiceID, DoctorID),
	FOREIGN KEY (ServiceID) REFERENCES Services(ServiceID),
	FOREIGN KEY (DoctorID) REFERENCES Doctors(DoctorID)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;

CREATE TABLE ServicesProvidedByHospitals (
	ServiceID INT(10) NOT NULL,
	HospitalID INT(10) NOT NULL,
	PRIMARY KEY (ServiceID, HospitalID),
	FOREIGN KEY (ServiceID) REFERENCES Services(ServiceID),
	FOREIGN KEY (HospitalID) REFERENCES Hospitals(HospitalID)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;

CREATE TABLE TestsCoveredByInsurancePlans (
	TestID INT(10) NOT NULL,
	InsurancePlanID INT(10) NOT NULL,
	PRIMARY KEY (TestID, InsurancePlanID),
	FOREIGN KEY (TestID) REFERENCES Tests(TestID),
	FOREIGN KEY (InsurancePlanID) REFERENCES InsurancePlans(InsurancePlanID)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;

CREATE TABLE TestsProvidedByLabs (
	TestID INT(10) NOT NULL,
	LabID INT(10) NOT NULL,
	PRIMARY KEY (TestID, LabID),
	FOREIGN KEY (TestID) REFERENCES Tests(TestID),
	FOREIGN KEY (LabID) REFERENCES Labs(LabID)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;

CREATE TABLE TestsUsedByServices (
	TestID INT(10) NOT NULL,
	ServiceID INT(10) NOT NULL,
	PRIMARY KEY (TestID, ServiceID),
	FOREIGN KEY (TestID) REFERENCES Tests(TestID),
	FOREIGN KEY (ServiceID) REFERENCES Services(ServiceID)
)
COLLATE='utf8_general_ci'
ENGINE=InnoDB;



/* DUMMY DATA */

INSERT INTO Addresses (AddressID, Street, City, StateCode, ZipCode) VALUES
(1,'37203 Koepp Key Suite 169','East Camronton','OH','78636'),
(2,'222 Mosciski Pines','Rosaleeside','NJ','39087'),
(3,'5858 Terrence Freeway Apt. 996','Port Cesarview','FL','16365'),
(4,'36922 Schamberger Highway Apt. 634','New Fordfurt','MO','51059'),
(5,'125 Danial Extension Suite 446','Port Bennett','VT','37360'),
(6,'40013 Tillman Mountains','Kovacekport','RI','70520'),
(7,'1880 Wilderman Locks Apt. 687','Shainaport','OK','60247'),
(8,'20361 Beahan Isle','Port Tarahaven','UT','58931'),
(9,'59652 Dale Ford Suite 455','Port Judge','KY','39082'),
(10,'454 Reichel Ridge Apt. 643','West Eli','NV','14364'),
(11,'24032 Hickle Isle Apt. 282','New Bernadettetown','NJ','93554'),
(12,'25977 Maximo Summit','Volkmanside','CT','14445'),
(13,'0466 Ophelia Points Apt. 900','Joanamouth','IA','23706'),
(14,'39903 Jailyn Lake','Schmelerton','CA','35258'),
(15,'92047 Glover Mountains','New Helmer','RI','32086'),
(16,'471 Lennie Plaza','Mayaville','SD','79393'),
(17,'93904 Schuster Canyon Apt. 916','Gradyborough','PA','87465'),
(18,'2470 Nona Mission','North Joanfort','OK','20373'),
(19,'008 Effertz Springs','West Randall','MN','63850'),
(20,'120 Olen Forks Apt. 659','Smithamfort','IA','52026'),
(21,'1863 Haag Ridges Suite 665','Estefaniafort','IA','35400'),
(22,'0779 Ricardo Manor','East Jarrett','OK','50570'),
(23,'547 Weimann Green Apt. 185','Port Jarret','ND','61024'),
(24,'701 Goyette Isle Suite 370','East Penelopeville','VA','16148'),
(25,'60224 Fritsch Circle Suite 337','Port Leliafort','FL','88718'),
(26,'94339 Dovie Loop','Toyview','VT','87906'),
(27,'099 Jakubowski Field Apt. 413','Runolfsdottirborough','WI','68258'),
(28,'91356 Kautzer Trafficway Suite 372','Lake Josuemouth','NV','30950'),
(29,'2392 Margaretta Skyway','Raynorstad','VA','38461'),
(30,'1644 Freida Trail','East Lukasbury','GA','34577'),
(31,'62090 Murazik Circle','Carmellatown','MD','25642'),
(32,'6253 Rollin Cove Suite 472','Harberland','MO','63963'),
(33,'2126 Marcel Oval','Kerlukebury','ND','38466'),
(34,'03186 Delphia Fork Apt. 580','Swiftfurt','TX','55806'),
(35,'811 Ledner Wells','Chasityborough','MO','17411'),
(36,'1209 Jade Wells Suite 901','Gutkowskistad','ME','76370'),
(37,'20606 Konopelski Mount Suite 165','Kautzerside','CO','96182'),
(38,'8168 Kessler Mill','East Willyville','ID','69890'),
(39,'05504 Gaylord Keys','Lake Cassidy','AK','17753'),
(40,'009 Parisian Knoll Apt. 726','North Ressieville','FL','50785'),
(41,'78283 Buckridge Ridge','Purdymouth','UT','63313'),
(42,'0087 Bogisich Crest','Bernadettemouth','NV','19597'),
(43,'8281 Lester Divide Suite 875','Jacobsburgh','OH','40779'),
(44,'963 Spencer Estates Suite 844','South Moshe','WY','90359'),
(45,'4427 Anderson Light','West Sebastian','NJ','24702'),
(46,'22660 Pfannerstill Bridge Suite 073','New Meganefurt','RI','61154'),
(47,'119 Sam Light','Port Bernadettestad','PA','32974'),
(48,'377 Becker Springs Apt. 777','Ernserhaven','ME','65942'),
(49,'00006 Jaiden Square Suite 348','Alphonsoshire','NE','88106'),
(50,'232 Koch Tunnel','East Emanuelchester','VA','11865'),
(51,'4791 Merle Mews','Wehnertown','WI','26769'),
(52,'57591 Renner Circle Suite 472','Quigleyburgh','MO','93255'),
(53,'405 Gloria Landing','New Cassandre','OR','32984'),
(54,'907 Schroeder Motorway','Hartmannland','SD','68611'),
(55,'03350 Rodriguez Junctions','Amarastad','NV','25152'),
(56,'90235 Okuneva Village Apt. 126','East Gudrun','NJ','77022'),
(57,'1836 Kianna Shores','Dorrismouth','AR','21111'),
(58,'6617 Howe Village','Lake Humberto','VA','44312'),
(59,'860 Chester Crossing','New Warrenchester','SC','60447'),
(60,'8401 Natasha Valley','Beiermouth','ID','10432'),
(61,'660 Fiona Burgs','West Cruz','SC','53089'),
(62,'28471 Bruen Court Apt. 483','Lake Courtney','WA','28077'),
(63,'28853 Rutherford Spring Apt. 863','Jessstad','RI','33803'),
(64,'5909 Ondricka Mill','North Minaville','IN','57204'),
(65,'8401 Auer Cliffs Suite 695','West Velmamouth','VA','61527'),
(66,'234 Arnaldo Centers Suite 778','New Amaya','DE','85846'),
(67,'78517 Marguerite Way Suite 046','Ileneview','NV','82259'),
(68,'7454 Dereck Falls','South Alford','AL','22249'),
(69,'915 Armstrong Mission','South Alexanneview','UT','45436'),
(70,'9516 Lane Cove Suite 626','Port Joany','KS','63796');

INSERT INTO Patients (PatientID, FirstName, LastName, SocialSecurityNumber, DateOfBirth, EmailAddress, PhoneNumber, AddressID, Password) VALUES
(1,'Jermey','Rohan','905-44-1539','2000-07-03','jermey.rohan@gmail.com','526-326-0021',1,'password'),
(2,'Ardella','Bednar','513-05-5871','1984-03-18','ardella.bednar@gmail.com','073-641-6572',2,'password'),
(3,'Sylvester','Cruickshank','508-85-9539','2015-04-18','sylvester.cruickshank@gmail.com','173-209-7490',3,'password'),
(4,'Virgie','Aufderhar','713-20-1003','2004-07-14','virgie.aufderhar@gmail.com','217-951-8900',4,'password'),
(5,'Casimir','McKenzie','768-06-8925','2000-03-16','casimir.mckenzie@gmail.com','384-291-2456',5,'password'),
(6,'Vilma','Mraz','683-87-3868','2003-12-09','vilma.mraz@gmail.com','431-508-1122',6,'password'),
(7,'Gia','Zemlak','648-71-2686','1972-04-06','gia.zemlak@gmail.com','406-322-3841',7,'password'),
(8,'Alba','Christiansen','960-51-6037','2009-10-18','alba.christiansen@gmail.com','130-827-0566',8,'password'),
(9,'Beth','Jast','522-65-4483','1979-11-04','beth.jast@gmail.com','729-594-0761',9,'password'),
(10,'Heber','Gulgowski','774-84-2740','2020-07-29','heber.gulgowski@gmail.com','181-910-8275',10,'password'),
(11,'Nyah','Sanford','399-73-1851','1978-02-02','nyah.sanford@gmail.com','023-246-1011',11,'password'),
(12,'Delmer','Lakin','896-53-4238','1980-08-02','delmer.lakin@gmail.com','158-674-2233',12,'password'),
(13,'Bettie','Dickens','898-34-9119','1985-06-19','bettie.dickens@gmail.com','728-468-4678',13,'password'),
(14,'Elvie','Cassin','833-13-1733','1972-11-25','elvie.cassin@gmail.com','590-296-6721',14,'password'),
(15,'Domenick','Christiansen','445-23-9745','2019-04-23','domenick.christiansen@gmail.com','592-444-6578',15,'password'),
(16,'Marshall','Hegmann','633-36-6271','1978-04-30','marshall.hegmann@gmail.com','235-372-0809',16,'password'),
(17,'Lizzie','Rodriguez','289-16-8480','2001-10-27','lizzie.rodriguez@gmail.com','154-110-1678',17,'password'),
(18,'Trevor','Block','289-71-2527','2014-07-19','trevor.block@gmail.com','453-349-5314',18,'password'),
(19,'Rod','Beatty','537-00-8398','1998-07-20','rod.beatty@gmail.com','112-812-1089',19,'password'),
(20,'Cordie','Wisoky','067-56-1482','1977-07-22','cordie.wisoky@gmail.com','699-972-0274',20,'password');

INSERT INTO InsurancePlans (InsurancePlanID, Name, AnnualPremium, ProductDeductible, ServiceDeductible, TestDeductible, PlanContribution, MaxCoverage) VALUES
(1,'nobis Insurance',21585,218,4662,1348,3799,14133),
(2,'provident Insurance',38986,73,4200,2319,9053,10285),
(3,'et Insurance',39832,121,4971,1895,2631,13803),
(4,'dolor Insurance',31378,190,1146,2210,9105,14421),
(5,'at Insurance',33847,108,3323,821,7862,12619),
(6,'ex Insurance',31244,119,2856,1614,9386,17981),
(7,'labore Insurance',24375,113,1782,2092,2728,11739),
(8,'quo Insurance',20316,86,4108,1354,4428,15056),
(9,'exercitationem Insurance',32800,103,2144,2015,9178,13048),
(10,'voluptatem Insurance',23795,140,2137,1456,8325,13929);

INSERT INTO Pharmacies (PharmacyID, Name, AddressID) VALUES
(1,'magnam Pharmacy',21),
(2,'saepe Pharmacy',22),
(3,'voluptas Pharmacy',23),
(4,'ut Pharmacy',24),
(5,'ducimus Pharmacy',25),
(6,'debitis Pharmacy',26),
(7,'quasi Pharmacy',27),
(8,'laborum Pharmacy',28),
(9,'laudantium Pharmacy',29),
(10,'velit Pharmacy',30);

INSERT INTO Labs (LabID, Name, AddressID) VALUES
(1,'nostrum Lab',31),
(2,'neque Lab',32),
(3,'molestiae Lab',33),
(4,'architecto Lab',34),
(5,'fugiat Lab',35),
(6,'ipsum Lab',36),
(7,'consequuntur Lab',37),
(8,'voluptas Lab',38),
(9,'quibusdam Lab',39),
(10,'numquam Lab',40);

INSERT INTO Hospitals (HospitalID, Name, AddressID) VALUES
(1,'hic Hospital',41),
(2,'et Hospital',42),
(3,'odit Hospital',43),
(4,'laborum Hospital',44),
(5,'cupiditate Hospital',45),
(6,'ducimus Hospital',46),
(7,'harum Hospital',47),
(8,'sit Hospital',48),
(9,'debitis Hospital',49),
(10,'est Hospital',50);

INSERT INTO Doctors (DoctorID, HospitalID, FirstName, LastName, EmailAddress, PhoneNumber, AddressID, Password, TimeStart, TimeEnd) VALUES
(1,1,'Geo','Jast','geo.jast@gmail.com','682-469-9110',51,'password',3,24),
(2,1,'Clifton','Langworth','clifton.langworth@gmail.com','005-060-9966',52,'password',7,15),
(3,2,'Loren','Wolff','loren.wolff@gmail.com','191-380-2045',53,'password',11,13),
(4,2,'Marta','Boyer','marta.boyer@gmail.com','683-578-2931',54,'password',12,18),
(5,3,'Cassandra','Waelchi','cassandra.waelchi@gmail.com','880-495-5196',55,'password',6,20),
(6,3,'Dandre','Lakin','danre.lakin@gmail.com','187-038-8750',56,'password',6,17),
(7,4,'Elmira','Kessler','elmira.kessler@gmail.com','137-314-0314',57,'password',2,21),
(8,4,'Warren','Padberg','warren.padberg@gmail.com','660-215-0636',58,'password',12,17),
(9,5,'Scotty','Kuhic','scotty.kuhic@gmail.com','681-733-6319',59,'password',12,21),
(10,5,'Janae','Langworth','janae.langworth@gmail.com','186-445-2509',60,'password',0,14),
(11,6,'Akeem','Von','akeem.von@gmail.com','172-515-0711',61,'password',5,22),
(12,6,'Saige','Lehner','saige.lehner@gmail.com','490-600-5892',62,'password',6,21),
(13,7,'Fatima','Feeney','fatima.feeney@gmail.com','511-251-8957',63,'password',7,13),
(14,7,'Kevin','Harvey','kevin.harvey@gmail.com','588-262-4972',64,'password',2,14),
(15,8,'Hiram','McCullough','hiram.mccullough@gmail.com','152-112-1504',65,'password',7,13),
(16,8,'Alexis','Ankunding','alexis.ankunding@gmail.com','034-348-2837',66,'password',4,22),
(17,9,'Ross','Nader','ross.nader@gmail.com','223-693-3205',67,'password',2,14),
(18,9,'Dovie','Jerde','dovie.jerde@gmail.com','465-840-8469',68,'password',10,20),
(19,10,'Seth','Doyle','seth.doyle@gmail.com','152-549-4297',69,'password',7,22),
(20,10,'Kaylee','Jacobi','kaylee.jacobi@gmail.com','632-933-9184',70,'password',6,19);

INSERT INTO Products (ProductID, Name, Cost) VALUES
(1,'architecto Product',372),
(2,'aliquid Product',200),
(3,'dolorem Product',104),
(4,'eum Product',112),
(5,'illo Product',225),
(6,'dolore Product',479),
(7,'sint Product',122),
(8,'eos Product',145),
(9,'dolorum Product',145),
(10,'quas Product',356),
(11,'est Product',445),
(12,'itaque Product',137),
(13,'consectetur Product',256),
(14,'beatae Product',424),
(15,'provident Product',473),
(16,'quia Product',357),
(17,'recusandae Product',403),
(18,'voluptatem Product',290),
(19,'nulla Product',155),
(20,'esse Product',304),
(21,'blanditiis Product',477),
(22,'voluptas Product',482),
(23,'possimus Product',160),
(24,'explicabo Product',153),
(25,'doloribus Product',317),
(26,'ratione Product',122),
(27,'nobis Product',466),
(28,'dolor Product',150),
(29,'qui Product',496),
(30,'consequatur Product',471),
(31,'omnis Product',288),
(32,'et Product',165),
(33,'reiciendis Product',252),
(34,'quaerat Product',497),
(35,'exercitationem Product',225),
(36,'quisquam Product',197),
(37,'iusto Product',234),
(38,'molestias Product',419),
(39,'ea Product',424),
(40,'occaecati Product',142),
(41,'odit Product',102),
(42,'expedita Product',450),
(43,'corporis Product',120),
(44,'ut Product',386),
(45,'officia Product',254),
(46,'error Product',376),
(47,'repellat Product',179),
(48,'accusantium Product',452),
(49,'accusamus Product',332),
(50,'quis Product',483);

INSERT INTO Services (ServiceID, Name, Cost) VALUES
(1,'neque Service',5920),
(2,'enim Service',7942),
(3,'eligendi Service',3977),
(4,'autem Service',3847),
(5,'est Service',5896),
(6,'rerum Service',7588),
(7,'nulla Service',8188),
(8,'nihil Service',2171),
(9,'consequatur Service',2961),
(10,'nisi Service',8400),
(11,'ab Service',7042),
(12,'error Service',6206),
(13,'voluptates Service',9883),
(14,'aliquam Service',7999),
(15,'sed Service',5840),
(16,'et Service',7194),
(17,'illo Service',4803),
(18,'com Service',5060),
(19,'quos Service',6238),
(20,'quam Service',5740),
(21,'non Service',2598),
(22,'corrupti Service',8540),
(23,'sit Service',4504),
(24,'iusto Service',5244),
(25,'ullam Service',7233),
(26,'velit Service',5806),
(27,'id Service',9969),
(28,'sint Service',9867),
(29,'porro Service',5339),
(30,'debitis Service',7145),
(31,'ex Service',8891),
(32,'dolorum Service',7542),
(33,'facere Service',4078),
(34,'repellat Service',5204),
(35,'dignissimos Service',7736),
(36,'laboriosam Service',9715),
(37,'quidem Service',3747),
(38,'suscipit Service',7726),
(39,'fuga Service',3892),
(40,'earum Service',2715),
(41,'cupiditate Service',7323),
(42,'aliquid Service',3450),
(43,'occaecati Service',4366),
(44,'a Service',3503),
(45,'dolorem Service',3674),
(46,'iure Service',4022),
(47,'distinctio Service',5214),
(48,'optio Service',4510),
(49,'molestias Service',8105),
(50,'sunt Service',2581);

INSERT INTO Tests (TestID, Name, Cost) VALUES
(1,'corporis Test',3377),
(2,'numquam Test',4343),
(3,'molestiae Test',563),
(4,'aliquam Test',2700),
(5,'commodi Test',573),
(6,'mollitia Test',1145),
(7,'voluptas Test',1350),
(8,'accusantium Test',2761),
(9,'at Test',3402),
(10,'ipsum Test',655),
(11,'consequatur Test',4019),
(12,'ut Test',2066),
(13,'quia Test',1328),
(14,'iste Test',3494),
(15,'tenetur Test',4885),
(16,'et Test',4947),
(17,'rerum Test',3767),
(18,'saepe Test',3517),
(19,'reiciendis Test',1572),
(20,'eaque Test',1435),
(21,'quasi Test',1832),
(22,'dolor Test',1861),
(23,'exercitationem Test',4027),
(24,'sed Test',2905),
(25,'adipisci Test',947),
(26,'qui Test',3911),
(27,'sit Test',1754),
(28,'quos Test',1149),
(29,'debitis Test',3407),
(30,'eum Test',3287),
(31,'necessitatibus Test',2234),
(32,'nobis Test',859),
(33,'modi Test',3344),
(34,'nulla Test',4535),
(35,'quo Test',654),
(36,'vero Test',3692),
(37,'animi Test',3697),
(38,'similique Test',748),
(39,'asperiores Test',2065),
(40,'libero Test',3241),
(41,'repellendus Test',813),
(42,'ab Test',2018),
(43,'suscipit Test',1592),
(44,'minus Test',2155),
(45,'a Test',1935),
(46,'nihil Test',582),
(47,'omnis Test',4259),
(48,'velit Test',1971),
(49,'provident Test',2038),
(50,'odio Test',2606);

/*INSERT INTO Orders (OrderID, PatientID, PharmacyID, ProductID, Quantity, OrderDate, Cost, DueDate) VALUES*/

/*INSERT INTO ServiceAppointments (ServiceAppointmentID, PatientID, DoctorID, ServiceID, AppointmentDate, AppointmentTime, Diagnosis, Cost, DueDate) VALUES*/

/*INSERT INTO TestAppointments (TestAppointmentID, PatientID, LabID, TestID, AppointmentDate, AppointmentTime, Diagnosis, Cost, DueDate) VALUES*/

/*INSERT INTO PatientsToDoctorsInfoConsent (PatientID, DoctorID, FirstName, LastName, SocialSecurityNumber, DateOfBirth, EmailAddress, PhoneNumber, AddressID, InsurancePlanID, Orders, ServiceAppointments, TestAppointments) VALUES*/

INSERT INTO PatientsInsurancePlansAndCoverage (PatientID, InsurancePlanID, AmountCovered) VALUES
(1,1,0),
(2,1,0),
(3,2,0),
(4,2,0),
(5,3,0),
(6,3,0),
(7,4,0),
(8,4,0),
(9,5,0),
(10,5,0),
(11,6,0),
(12,6,0),
(13,7,0),
(14,7,0),
(15,8,0),
(16,8,0),
(17,9,0),
(18,9,0),
(19,10,0),
(20,10,0);

INSERT INTO ProductsCoveredByInsurancePlans (ProductID, InsurancePlanID) VALUES
(49,1),
(50,1),
(1,1),
(2,1),
(3,1),
(4,1),
(5,1),
(4,2),
(5,2),
(6,2),
(7,2),
(8,2),
(9,2),
(10,2),
(9,3),
(10,3),
(11,3),
(12,3),
(13,3),
(14,3),
(15,3),
(14,4),
(15,4),
(16,4),
(17,4),
(18,4),
(19,4),
(20,4),
(19,5),
(20,5),
(21,5),
(22,5),
(23,5),
(24,5),
(25,5),
(24,6),
(25,6),
(26,6),
(27,6),
(28,6),
(29,6),
(30,6),
(29,7),
(30,7),
(31,7),
(32,7),
(33,7),
(34,7),
(35,7),
(34,8),
(35,8),
(36,8),
(37,8),
(38,8),
(39,8),
(40,8),
(39,9),
(40,9),
(41,9),
(42,9),
(43,9),
(44,9),
(45,9),
(44,10),
(45,10),
(46,10),
(47,10),
(48,10),
(49,10),
(50,10);

INSERT INTO ProductsProvidedByPharmacies (ProductID, PharmacyID) VALUES
(44,1),
(45,1),
(46,1),
(47,1),
(48,1),
(49,1),
(50,1),
(49,2),
(50,2),
(1,2),
(2,2),
(3,2),
(4,2),
(5,2),
(4,3),
(5,3),
(6,3),
(7,3),
(8,3),
(9,3),
(10,3),
(9,4),
(10,4),
(11,4),
(12,4),
(13,4),
(14,4),
(15,4),
(14,5),
(15,5),
(16,5),
(17,5),
(18,5),
(19,5),
(20,5),
(19,6),
(20,6),
(21,6),
(22,6),
(23,6),
(24,6),
(25,6),
(24,7),
(25,7),
(26,7),
(27,7),
(28,7),
(29,7),
(30,7),
(29,8),
(30,8),
(31,8),
(32,8),
(33,8),
(34,8),
(35,8),
(34,9),
(35,9),
(36,9),
(37,9),
(38,9),
(39,9),
(40,9),
(39,10),
(40,10),
(41,10),
(42,10),
(43,10),
(44,10),
(45,10);

INSERT INTO ProductsUsedByServices (ProductID, ServiceID) VALUES
(38,1),
(8,2),
(50,2),
(1,3),
(45,3),
(12,5),
(25,7),
(18,7),
(47,7),
(35,8),
(5,8),
(23,8),
(1,11),
(8,12),
(24,12),
(47,13),
(44,13),
(30,13),
(6,15),
(18,15),
(48,15),
(29,16),
(15,16),
(49,16),
(45,17),
(12,17),
(37,17),
(6,18),
(5,19),
(24,19),
(47,19),
(30,20),
(41,21),
(47,21),
(39,22),
(48,22),
(49,24),
(44,25),
(22,25),
(48,25),
(34,26),
(12,26),
(12,27),
(6,27),
(5,28),
(24,28),
(47,29),
(30,29),
(41,29),
(47,31),
(39,31),
(48,31),
(49,32),
(44,32),
(22,33),
(48,34),
(34,34),
(12,35),
(12,36),
(36,36),
(6,37),
(45,37),
(11,38),
(20,38),
(20,39),
(35,39),
(17,40),
(30,40),
(40,40),
(40,41),
(29,42),
(12,43),
(27,43),
(44,44),
(4,44),
(23,44),
(3,45),
(6,45),
(12,47),
(36,47),
(28,47),
(9,48),
(6,48),
(42,49),
(12,50);

INSERT INTO ServicesCoveredByInsurancePlans (ServiceID, InsurancePlanID) VALUES
(39,1),
(40,1),
(41,1),
(42,1),
(43,1),
(44,1),
(45,1),
(44,2),
(45,2),
(46,2),
(47,2),
(48,2),
(49,2),
(50,2),
(49,3),
(50,3),
(1,3),
(2,3),
(3,3),
(4,3),
(5,3),
(4,4),
(5,4),
(6,4),
(7,4),
(8,4),
(9,4),
(10,4),
(9,5),
(10,5),
(11,5),
(12,5),
(13,5),
(14,5),
(15,5),
(14,6),
(15,6),
(16,6),
(17,6),
(18,6),
(19,6),
(20,6),
(19,7),
(20,7),
(21,7),
(22,7),
(23,7),
(24,7),
(25,7),
(24,8),
(25,8),
(26,8),
(27,8),
(28,8),
(29,8),
(30,8),
(29,9),
(30,9),
(31,9),
(32,9),
(33,9),
(34,9),
(35,9),
(34,10),
(35,10),
(36,10),
(37,10),
(38,10),
(39,10),
(40,10);

INSERT INTO ServicesPerformedByDoctors (ServiceID, DoctorID) VALUES
(1,1),
(2,1),
(3,1),
(4,1),
(5,1),
(3,2),
(4,2),
(5,2),
(6,2),
(7,2),
(6,3),
(7,3),
(8,3),
(9,3),
(10,3),
(8,4),
(9,4),
(10,4),
(11,4),
(12,4),
(11,5),
(12,5),
(13,5),
(14,5),
(15,5),
(13,6),
(14,6),
(15,6),
(16,6),
(17,6),
(16,7),
(17,7),
(18,7),
(19,7),
(20,7),
(18,8),
(19,8),
(20,8),
(21,8),
(22,8),
(21,9),
(22,9),
(23,9),
(24,9),
(25,9),
(23,10),
(24,10),
(25,10),
(26,10),
(27,10),
(26,11),
(27,11),
(28,11),
(29,11),
(30,11),
(28,12),
(29,12),
(30,12),
(31,12),
(32,12),
(31,13),
(32,13),
(33,13),
(34,13),
(35,13),
(33,14),
(34,14),
(35,14),
(36,14),
(37,14),
(36,15),
(37,15),
(38,15),
(39,15),
(40,15),
(38,16),
(39,16),
(40,16),
(41,16),
(42,16),
(41,17),
(42,17),
(43,17),
(44,17),
(45,17),
(43,18),
(44,18),
(45,18),
(46,18),
(47,18),
(46,19),
(47,19),
(48,19),
(49,19),
(50,19),
(48,20),
(49,20),
(50,20),
(1,20),
(2,20);

INSERT INTO ServicesProvidedByHospitals (ServiceID, HospitalID) VALUES
(2,1),
(3,1),
(4,1),
(5,1),
(6,1),
(7,2),
(8,2),
(9,2),
(10,2),
(11,2),
(12,3),
(13,3),
(14,3),
(15,3),
(16,3),
(17,4),
(18,4),
(19,4),
(20,4),
(21,4),
(22,5),
(23,5),
(24,5),
(25,5),
(26,5),
(27,6),
(28,6),
(29,6),
(30,6),
(31,6),
(32,7),
(33,7),
(34,7),
(35,7),
(36,7),
(37,8),
(38,8),
(39,8),
(40,8),
(41,8),
(42,9),
(43,9),
(44,9),
(45,9),
(46,9),
(47,10),
(48,10),
(49,10),
(50,10),
(1,10);

INSERT INTO TestsCoveredByInsurancePlans (TestID, InsurancePlanID) VALUES
(41,1),
(42,1),
(43,1),
(44,1),
(45,1),
(46,2),
(47,2),
(48,2),
(49,2),
(50,2),
(1,3),
(2,3),
(3,3),
(4,3),
(5,3),
(6,4),
(7,4),
(8,4),
(9,4),
(10,4),
(11,5),
(12,5),
(13,5),
(14,5),
(15,5),
(16,6),
(17,6),
(18,6),
(19,6),
(20,6),
(21,7),
(22,7),
(23,7),
(24,7),
(25,7),
(26,8),
(27,8),
(28,8),
(29,8),
(30,8),
(31,9),
(32,9),
(33,9),
(34,9),
(35,9),
(36,10),
(37,10),
(38,10),
(39,10),
(40,10);

INSERT INTO TestsProvidedByLabs (TestID, LabID) VALUES
(34,1),
(35,1),
(36,1),
(37,1),
(38,1),
(39,1),
(40,1),
(39,2),
(40,2),
(41,2),
(42,2),
(43,2),
(44,2),
(45,2),
(44,3),
(45,3),
(46,3),
(47,3),
(48,3),
(49,3),
(50,3),
(49,4),
(50,4),
(1,4),
(2,4),
(3,4),
(4,4),
(5,4),
(4,5),
(5,5),
(6,5),
(7,5),
(8,5),
(9,5),
(10,5),
(9,6),
(10,6),
(11,6),
(12,6),
(13,6),
(14,6),
(15,6),
(14,7),
(15,7),
(16,7),
(17,7),
(18,7),
(19,7),
(20,7),
(19,8),
(20,8),
(21,8),
(22,8),
(23,8),
(24,8),
(25,8),
(24,9),
(25,9),
(26,9),
(27,9),
(28,9),
(29,9),
(30,9),
(29,10),
(30,10),
(31,10),
(32,10),
(33,10),
(34,10),
(35,10);

INSERT INTO TestsUsedByServices (TestID, ServiceID) VALUES
(18,1),
(29,1),
(3,2),
(40,2),
(10,2),
(20,3),
(43,3),
(31,4),
(28,4),
(30,5),
(1,5),
(22,5),
(17,6),
(9,7),
(11,8),
(7,8),
(14,8),
(30,9),
(21,9),
(13,10),
(11,10),
(28,10),
(3,12),
(36,12),
(31,13),
(6,13),
(27,14),
(8,14),
(25,14),
(37,15),
(48,15),
(50,15),
(6,16),
(37,16),
(29,18),
(37,18),
(2,20),
(14,20),
(45,20),
(12,21),
(17,24),
(23,26),
(17,26),
(26,28),
(15,28),
(50,28),
(27,29),
(19,29),
(47,30),
(14,30),
(48,30),
(24,31),
(34,31),
(17,31),
(27,32),
(30,32),
(50,32),
(38,33),
(10,33),
(23,33),
(12,34),
(42,34),
(35,35),
(49,36),
(34,37),
(3,38),
(42,39),
(26,40),
(1,42),
(35,43),
(45,43),
(25,47),
(18,47),
(37,48),
(30,48),
(25,48),
(26,49),
(37,50);